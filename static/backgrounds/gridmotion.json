{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "gridmotion",
  "type": "registry:block",
  "title": "GridMotion",
  "description": "GridMotion background component",
  "dependencies": [
    "gsap",
    "svelte"
  ],
  "files": [
    {
      "path": "src/lib/backgrounds/GridMotion/GridMotion.svelte",
      "content": "<script lang=\"ts\">\n\t// @ts-ignore\n\timport { gsap } from 'gsap';\n\timport { onMount } from 'svelte';\n\n\tinterface GridMotionProps {\n\t\titems?: string[];\n\t\tgradientColor?: string;\n\t\tclassName?: string;\n\t}\n\n\tlet { items = [], gradientColor = 'black', className = '' }: GridMotionProps = $props();\n\n\tlet gridRef: HTMLDivElement;\n\tlet rowRefs: (HTMLDivElement | null)[] = [];\n\tlet mouseX = $state(typeof window !== 'undefined' ? window.innerWidth / 2 : 0);\n\n\tconst totalItems = 28;\n\tconst defaultItems = Array.from({ length: totalItems }, (_, index) => `Item ${index + 1}`);\n\tconst combinedItems = items.length > 0 ? items.slice(0, totalItems) : defaultItems;\n\n\tonMount(() => {\n\t\tgsap.ticker.lagSmoothing(0);\n\n\t\tconst handleMouseMove = (e: MouseEvent): void => {\n\t\t\tmouseX = e.clientX;\n\t\t};\n\n\t\tconst updateMotion = (): void => {\n\t\t\tconst maxMoveAmount = 300;\n\t\t\tconst baseDuration = 0.8;\n\t\t\tconst inertiaFactors = [0.6, 0.4, 0.3, 0.2];\n\n\t\t\trowRefs.forEach((row, index) => {\n\t\t\t\tif (row) {\n\t\t\t\t\tconst direction = index % 2 === 0 ? 1 : -1;\n\t\t\t\t\tconst moveAmount =\n\t\t\t\t\t\t((mouseX / window.innerWidth) * maxMoveAmount - maxMoveAmount / 2) * direction;\n\n\t\t\t\t\tgsap.to(row, {\n\t\t\t\t\t\tx: moveAmount,\n\t\t\t\t\t\tduration: baseDuration + inertiaFactors[index % inertiaFactors.length],\n\t\t\t\t\t\tease: 'power3.out',\n\t\t\t\t\t\toverwrite: 'auto'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst removeAnimationLoop = gsap.ticker.add(updateMotion);\n\t\twindow.addEventListener('mousemove', handleMouseMove);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousemove', handleMouseMove);\n\t\t\tremoveAnimationLoop();\n\t\t};\n\t});\n</script>\n\n<div class=\"noscroll loading {className}\" bind:this={gridRef}>\n\t<section\n\t\tclass=\"intro\"\n\t\tstyle=\"background: radial-gradient(circle, {gradientColor} 0%, transparent 100%)\"\n\t>\n\t\t<div class=\"gridMotion-container\">\n\t\t\t{#each Array.from({ length: 4 }) as _, rowIndex}\n\t\t\t\t<div class=\"row\" bind:this={rowRefs[rowIndex]}>\n\t\t\t\t\t{#each Array.from({ length: 7 }) as _, itemIndex}\n\t\t\t\t\t\t{@const content = combinedItems[rowIndex * 7 + itemIndex]}\n\t\t\t\t\t\t<div class=\"row__item\">\n\t\t\t\t\t\t\t<div class=\"row__item-inner\" style=\"background-color: #111\">\n\t\t\t\t\t\t\t\t{#if typeof content === 'string' && content.startsWith('http')}\n\t\t\t\t\t\t\t\t\t<div class=\"row__item-img\" style=\"background-image: url({content})\"></div>\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t<div class=\"row__item-content\">{content}</div>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t\t<div class=\"fullview\"></div>\n\t</section>\n</div>\n\n<style>\n\t.noscroll {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tmax-width: 100%;\n\t\toverflow: hidden;\n\t}\n\n\t.intro {\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t\toverflow: hidden;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.intro::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-size: 250px;\n\t\tpointer-events: none;\n\t\tz-index: 4;\n\t}\n\n\t.gridMotion-container {\n\t\tgap: 1rem;\n\t\tflex: none;\n\t\tposition: absolute;\n\t\ttop: -50vh;\n\t\tleft: -50vw;\n\t\twidth: 150vw;\n\t\theight: 150vh;\n\t\tdisplay: grid;\n\t\tgrid-template-rows: repeat(4, 1fr);\n\t\tgrid-template-columns: 100%;\n\t\ttransform: rotate(-15deg);\n\t\ttransform-origin: center center;\n\t\tz-index: 2;\n\t}\n\n\t.row {\n\t\tdisplay: grid;\n\t\tgap: 1rem;\n\t\tgrid-template-columns: repeat(7, 1fr);\n\t\twill-change: transform, filter;\n\t}\n\n\t.row__item {\n\t\tposition: relative;\n\t}\n\n\t.row__item-inner {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t\tborder-radius: 10px;\n\t\tbackground-color: #111;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tcolor: white;\n\t\tfont-size: 1.5rem;\n\t}\n\n\t.row__item-img {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-size: cover;\n\t\tbackground-position: 50% 50%;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\t.row__item-content {\n\t\tpadding: 1rem;\n\t\ttext-align: center;\n\t\tz-index: 1;\n\t}\n\n\t.fullview {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tpointer-events: none;\n\t}\n\n\t.fullview .row__item-inner {\n\t\tborder-radius: 0px;\n\t}\n</style>\n",
      "type": "registry:component"
    }
  ]
}